(self.webpackChunkmetaverse_experience=self.webpackChunkmetaverse_experience||[]).push([[861],{2250:function(t,e,i){i(7454);const n=window.KeyboardEvent;t.exports=AFRAME.registerComponent("keyboard-controls",{schema:{enabled:{default:!0},debug:{default:!1}},init:function(){this.dVelocity=new THREE.Vector3,this.localKeys={},this.listeners={keydown:this.onKeyDown.bind(this),keyup:this.onKeyUp.bind(this),blur:this.onBlur.bind(this),onContextMenu:this.onContextMenu.bind(this)}},isVelocityActive:function(){return this.data.enabled&&!!Object.keys(this.getKeys()).length},getVelocityDelta:function(){const t=this.data,e=this.getKeys();return this.dVelocity.set(0,0,0),t.enabled&&((e.KeyW||e.ArrowUp)&&(this.dVelocity.z-=1),(e.KeyA||e.ArrowLeft)&&(this.dVelocity.x-=1),(e.KeyS||e.ArrowDown)&&(this.dVelocity.z+=1),(e.KeyD||e.ArrowRight)&&(this.dVelocity.x+=1)),this.dVelocity.clone()},play:function(){this.attachEventListeners()},pause:function(){this.removeEventListeners()},attachEventListeners:function(){window.addEventListener("contextmenu",this.listeners.onContextMenu,!1),window.addEventListener("keydown",this.listeners.keydown,!1),window.addEventListener("keyup",this.listeners.keyup,!1),window.addEventListener("blur",this.listeners.blur,!1)},onContextMenu:function(){for(const t in this.localKeys)this.localKeys.hasOwnProperty(t)&&delete this.localKeys[t]},removeEventListeners:function(){window.removeEventListener("keydown",this.listeners.keydown),window.removeEventListener("keyup",this.listeners.keyup),window.removeEventListener("blur",this.listeners.blur)},onKeyDown:function(t){AFRAME.utils.shouldCaptureKeyEvent(t)&&(this.localKeys[t.code]=!0,this.emit(t))},onKeyUp:function(t){AFRAME.utils.shouldCaptureKeyEvent(t)&&(delete this.localKeys[t.code],this.emit(t))},onBlur:function(){for(const t in this.localKeys)this.localKeys.hasOwnProperty(t)&&delete this.localKeys[t]},emit:function(t){"__keyboard-controls-proxy"in t&&this.el.emit(t.type,t),this.el.emit(t.type+":"+t.code,new n(t.type,t)),this.data.debug&&console.log(t.type+":"+t.code)},isPressed:function(t){return t in this.getKeys()},getKeys:function(){return this.isProxied()?this.el.sceneEl.components["proxy-controls"].getKeyboard():this.localKeys},isProxied:function(){const t=this.el.sceneEl.components["proxy-controls"];return t&&t.isConnected()}})},3819:function(t){const e="-controls";t.exports=AFRAME.registerComponent("movement-controls",{dependencies:["rotation"],schema:{enabled:{default:!0},controls:{default:["gamepad","trackpad","keyboard","touch"]},speed:{default:.3,min:0},fly:{default:!1},constrainToNavMesh:{default:!1},camera:{default:"[movement-controls] [camera]",type:"selector"}},init:function(){const t=this.el;this.data.camera||(this.data.camera=t.querySelector("[camera]")),this.velocityCtrl=null,this.velocity=new THREE.Vector3,this.heading=new THREE.Quaternion,this.navGroup=null,this.navNode=null,t.sceneEl.hasLoaded?this.injectControls():t.sceneEl.addEventListener("loaded",this.injectControls.bind(this))},update:function(t){const i=this.el,n=this.data,o=i.sceneEl.systems.nav;if(i.sceneEl.hasLoaded&&this.injectControls(),o&&n.constrainToNavMesh!==t.constrainToNavMesh&&(n.constrainToNavMesh?o.addAgent(this):o.removeAgent(this)),n.enabled!==t.enabled)for(let t=0;t<n.controls.length;t++){const i=n.controls[t]+e;this.el.setAttribute(i,{enabled:this.data.enabled})}},injectControls:function(){const t=this.data;for(let i=0;i<t.controls.length;i++){const n=t.controls[i]+e;this.el.setAttribute(n,{enabled:this.data.enabled})}},updateNavLocation:function(){this.navGroup=null,this.navNode=null},tick:function(){const t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Vector3;return function(n,o){if(!o)return;const s=this.el,a=this.data;if(!a.enabled)return;this.updateVelocityCtrl();const r=this.velocityCtrl,c=this.velocity;if(r)if(o/1e3>.2?c.set(0,0,0):this.updateVelocity(o),a.constrainToNavMesh&&!1!==r.isNavMeshConstrained){if(c.lengthSq()<1e-5)return;t.copy(s.object3D.position),e.copy(c).multiplyScalar(o/1e3).add(t);const n=s.sceneEl.systems.nav;this.navGroup=null===this.navGroup?n.getGroup(t):this.navGroup,this.navNode=this.navNode||n.getNode(t,this.navGroup),this.navNode=n.clampStep(t,e,this.navGroup,this.navNode,i),s.object3D.position.copy(i)}else s.hasAttribute("velocity")?s.setAttribute("velocity",c):(s.object3D.position.x+=c.x*o/1e3,s.object3D.position.y+=c.y*o/1e3,s.object3D.position.z+=c.z*o/1e3)}}(),updateVelocityCtrl:function(){const t=this.data;if(t.enabled){for(let i=0,n=t.controls.length;i<n;i++){const n=this.el.components[t.controls[i]+e];if(n&&n.isVelocityActive())return void(this.velocityCtrl=n)}this.velocityCtrl=null}},updateVelocity:function(){const t=new THREE.Vector2,e=new THREE.Quaternion;return function(i){let n;const o=this.el,s=this.velocityCtrl,a=this.velocity,r=this.data;if(s){if(!s.getVelocityDelta){if(s.getVelocity)return void a.copy(s.getVelocity());if(s.getPositionDelta)return void a.copy(s.getPositionDelta(i).multiplyScalar(1e3/i));throw new Error("Incompatible movement controls: ",s)}n=s.getVelocityDelta(i)}if(o.hasAttribute("velocity")&&!r.constrainToNavMesh&&a.copy(this.el.getAttribute("velocity")),n&&r.enabled){const i=r.camera;e.copy(i.object3D.quaternion),e.premultiply(o.object3D.quaternion),n.applyQuaternion(e);const s=n.length();r.fly?(a.copy(n),a.multiplyScalar(16.66667*this.data.speed)):(t.set(n.x,n.z),t.setLength(s*this.data.speed*16.66667),a.x=t.x,a.y=0,a.z=t.y)}}}()})},9048:function(t){t.exports=AFRAME.registerComponent("touch-controls",{schema:{enabled:{default:!0},reverseEnabled:{default:!0}},init:function(){this.dVelocity=new THREE.Vector3,this.bindMethods(),this.direction=0},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){const t=this.el.sceneEl,e=t.canvas;if(!e)return void t.addEventListener("render-target-loaded",this.addEventListeners.bind(this));e.addEventListener("touchstart",this.onTouchStart),e.addEventListener("touchend",this.onTouchEnd);const i=t.getAttribute("vr-mode-ui");i&&i.cardboardModeEnabled&&t.addEventListener("enter-vr",this.onEnterVR)},removeEventListeners:function(){const t=this.el.sceneEl&&this.el.sceneEl.canvas;t&&(t.removeEventListener("touchstart",this.onTouchStart),t.removeEventListener("touchend",this.onTouchEnd),this.el.sceneEl.removeEventListener("enter-vr",this.onEnterVR))},isVelocityActive:function(){return this.data.enabled&&!!this.direction},getVelocityDelta:function(){return this.dVelocity.z=this.direction,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onEnterVR=this.onEnterVR.bind(this)},onTouchStart:function(t){this.direction=-1,this.data.reverseEnabled&&t.touches&&2===t.touches.length&&(this.direction=1),t.preventDefault()},onTouchEnd:function(t){this.direction=0,t.preventDefault()},onEnterVR:function(){const t=this.el.sceneEl.xrSession;t&&(t.addEventListener("selectstart",this.onTouchStart),t.addEventListener("selectend",this.onTouchEnd))}})},9893:function(t){t.exports=AFRAME.registerComponent("trackpad-controls",{schema:{enabled:{default:!0},enableNegX:{default:!0},enablePosX:{default:!0},enableNegZ:{default:!0},enablePosZ:{default:!0},mode:{default:"touch",oneOf:["swipe","touch","press"]}},init:function(){this.dVelocity=new THREE.Vector3,this.zVel=0,this.xVel=0,this.bindMethods()},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){const t=this.data,e=this.el.sceneEl;switch(e.addEventListener("axismove",this.onAxisMove),t.mode){case"swipe":case"touch":e.addEventListener("trackpadtouchstart",this.onTouchStart),e.addEventListener("trackpadtouchend",this.onTouchEnd);break;case"press":e.addEventListener("trackpaddown",this.onTouchStart),e.addEventListener("trackpadup",this.onTouchEnd)}},removeEventListeners:function(){const t=this.el.sceneEl;t.removeEventListener("axismove",this.onAxisMove),t.removeEventListener("trackpadtouchstart",this.onTouchStart),t.removeEventListener("trackpadtouchend",this.onTouchEnd),t.removeEventListener("trackpaddown",this.onTouchStart),t.removeEventListener("trackpadup",this.onTouchEnd)},isVelocityActive:function(){return this.data.enabled&&this.isMoving},getVelocityDelta:function(){return this.dVelocity.z=this.isMoving?-this.zVel:1,this.dVelocity.x=this.isMoving?this.xVel:1,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onAxisMove=this.onAxisMove.bind(this)},onTouchStart:function(t){switch(this.data.mode){case"swipe":this.canRecordAxis=!0,this.startingAxisData=[];break;case"touch":case"press":this.isMoving=!0}t.preventDefault()},onTouchEnd:function(t){"swipe"==this.data.mode&&(this.startingAxisData=[]),this.isMoving=!1,t.preventDefault()},onAxisMove:function(t){switch(this.data.mode){case"swipe":return this.handleSwipeAxis(t);case"touch":case"press":return this.handleTouchAxis(t)}},handleSwipeAxis:function(t){const e=this.data,i=t.detail.axis;if(0===this.startingAxisData.length&&this.canRecordAxis&&(this.canRecordAxis=!1,this.startingAxisData[0]=i[0],this.startingAxisData[1]=i[1]),this.startingAxisData.length>0){let t=0,n=0;e.enableNegX&&i[0]<this.startingAxisData[0]&&(t=-1),e.enablePosX&&i[0]>this.startingAxisData[0]&&(t=1),e.enablePosZ&&i[1]>this.startingAxisData[1]&&(n=-1),e.enableNegZ&&i[1]<this.startingAxisData[1]&&(n=1);const o=Math.abs(this.startingAxisData[1]-i[1]);Math.abs(this.startingAxisData[0]-i[0])>o?(this.zVel=0,this.xVel=t,this.isMoving=!0):(this.xVel=0,this.zVel=n,this.isMoving=!0)}},handleTouchAxis:function(t){const e=this.data,i=t.detail.axis;let n=0,o=0;e.enableNegX&&i[0]<0&&(n=-1),e.enablePosX&&i[0]>0&&(n=1),e.enablePosZ&&i[1]>0&&(o=-1),e.enableNegZ&&i[1]<0&&(o=1),Math.abs(i[0])>Math.abs(i[1])?(this.zVel=0,this.xVel=n):(this.xVel=0,this.zVel=o)}})},6591:function(t){const e={once:THREE.LoopOnce,repeat:THREE.LoopRepeat,pingpong:THREE.LoopPingPong};function i(t){return t.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")}t.exports=AFRAME.registerComponent("animation-mixer",{schema:{clip:{default:"*"},duration:{default:0},clampWhenFinished:{default:!1,type:"boolean"},crossFadeDuration:{default:0},loop:{default:"repeat",oneOf:Object.keys(e)},repetitions:{default:1/0,min:0},timeScale:{default:1},startAt:{default:0}},init:function(){this.model=null,this.mixer=null,this.activeActions=[];const t=this.el.getObject3D("mesh");t?this.load(t):this.el.addEventListener("model-loaded",(t=>{this.load(t.detail.model)}))},load:function(t){const e=this.el;this.model=t,this.mixer=new THREE.AnimationMixer(t),this.mixer.addEventListener("loop",(t=>{e.emit("animation-loop",{action:t.action,loopDelta:t.loopDelta})})),this.mixer.addEventListener("finished",(t=>{e.emit("animation-finished",{action:t.action,direction:t.direction})})),this.data.clip&&this.update({})},remove:function(){this.mixer&&this.mixer.stopAllAction()},update:function(t){if(!t)return;const i=this.data,n=AFRAME.utils.diff(i,t);if("clip"in n)return this.stopAction(),void(i.clip&&this.playAction());this.activeActions.forEach((t=>{"duration"in n&&i.duration&&t.setDuration(i.duration),"clampWhenFinished"in n&&(t.clampWhenFinished=i.clampWhenFinished),("loop"in n||"repetitions"in n)&&t.setLoop(e[i.loop],i.repetitions),"timeScale"in n&&t.setEffectiveTimeScale(i.timeScale)}))},stopAction:function(){const t=this.data;for(let e=0;e<this.activeActions.length;e++)t.crossFadeDuration?this.activeActions[e].fadeOut(t.crossFadeDuration):this.activeActions[e].stop();this.activeActions.length=0},playAction:function(){if(!this.mixer)return;const t=this.model,n=this.data,o=t.animations||(t.geometry||{}).animations||[];if(!o.length)return;const s=(a=n.clip,new RegExp("^"+a.split(/\*+/).map(i).join(".*")+"$"));var a;for(let i,a=0;i=o[a];a++)if(i.name.match(s)){const o=this.mixer.clipAction(i,t);o.enabled=!0,o.clampWhenFinished=n.clampWhenFinished,n.duration&&o.setDuration(n.duration),1!==n.timeScale&&o.setEffectiveTimeScale(n.timeScale),o.startAt(this.mixer.time-n.startAt/1e3),o.setLoop(e[n.loop],n.repetitions).fadeIn(n.crossFadeDuration).play(),this.activeActions.push(o)}},tick:function(t,e){this.mixer&&!isNaN(e)&&this.mixer.update(e/1e3)}})},2290:function(t,e,i){THREE.ColladaLoader=i(203),t.exports.Component=AFRAME.registerComponent("collada-model-legacy",{schema:{type:"asset"},init:function(){this.model=null,this.loader=new THREE.ColladaLoader},update:function(){var t=this,e=this.el,i=this.data,n=this.el.sceneEl.systems.renderer;i&&(this.remove(),this.loader.load(i,(function(i){t.model=i.scene,t.model.traverse((function(t){if(t.isMesh){var e=t.material;e.color&&n.applyColorCorrection(e.color),e.map&&n.applyColorCorrection(e.map),e.emissive&&n.applyColorCorrection(e.emissive),e.emissiveMap&&n.applyColorCorrection(e.emissiveMap)}})),e.setObject3D("mesh",t.model),e.emit("model-loaded",{format:"collada",model:t.model})})))},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},5310:function(t,e,i){THREE.FBXLoader=i(9434),t.exports=AFRAME.registerComponent("fbx-model",{schema:{src:{type:"asset"},crossorigin:{default:""}},init:function(){this.model=null},update:function(){const t=this.data;if(!t.src)return;this.remove();const e=new THREE.FBXLoader;t.crossorigin&&e.setCrossOrigin(t.crossorigin),e.load(t.src,this.load.bind(this))},load:function(t){this.model=t,this.el.setObject3D("mesh",t),this.el.emit("model-loaded",{format:"fbx",model:t})},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},8837:function(t,e,i){const n=i(4657)(),o=function(){let t;return function(){return t=t||n("https://cdn.jsdelivr.net/gh/mrdoob/three.js@r86/examples/js/loaders/GLTFLoader.js"),t}}();t.exports=AFRAME.registerComponent("gltf-model-legacy",{schema:{type:"model"},init:function(){this.model=null,this.loader=null,this.loaderPromise=o().then((()=>{this.loader=new THREE.GLTFLoader,this.loader.setCrossOrigin("Anonymous")}))},update:function(){const t=this,e=this.el,i=this.data;i&&(this.remove(),this.loaderPromise.then((()=>{this.loader.load(i,(function(i){t.model=i.scene,t.model.animations=i.animations,e.setObject3D("mesh",t.model),e.emit("model-loaded",{format:"gltf",model:t.model})}))})))},remove:function(){this.model&&this.el.removeObject3D("mesh")}})},9874:function(t,e,i){i(6591),i(2290),i(5310),i(8837),i(171)},171:function(t){t.exports=AFRAME.registerComponent("object-model",{schema:{src:{type:"asset"},crossorigin:{default:""}},init:function(){this.model=null},update:function(){let t;const e=this.data;e.src&&(this.remove(),t=new THREE.ObjectLoader,e.crossorigin&&t.setCrossOrigin(e.crossorigin),t.load(e.src,(t=>{t.traverse((t=>{t instanceof THREE.SkinnedMesh&&t.material&&(t.material.skinning=!!(t.geometry&&t.geometry.bones||[]).length)})),this.load(t)})))},load:function(t){this.model=t,this.el.setObject3D("mesh",t),this.el.emit("model-loaded",{format:"json",model:t})},remove:function(){this.model&&this.el.removeObject3D("mesh")}})}}]);