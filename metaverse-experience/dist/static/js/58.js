(self.webpackChunkmetaverse_experience=self.webpackChunkmetaverse_experience||[]).push([[58],{7642:function(t){t.exports=AFRAME.registerComponent("checkpoint",{schema:{offset:{default:{x:0,y:0,z:0},type:"vec3"}},init:function(){this.active=!1,this.targetEl=null,this.fire=this.fire.bind(this),this.offset=new THREE.Vector3},update:function(){this.offset.copy(this.data.offset)},play:function(){this.el.addEventListener("click",this.fire)},pause:function(){this.el.removeEventListener("click",this.fire)},remove:function(){this.pause()},fire:function(){const t=this.el.sceneEl.querySelector("[checkpoint-controls]");if(!t)throw new Error("No `checkpoint-controls` component found.");t.components["checkpoint-controls"].setCheckpoint(this.el)},getOffset:function(){return this.offset.copy(this.data.offset)}})},4795:function(t){function e(t,e,i,n){t&&(e=e||[],t.traverse((t=>{if(!t.isMesh)return;var s;((s=t.material)?Array.isArray(s)?s:s.materials?s.materials:[s]:[]).forEach((t=>{t&&!("envMap"in t)||e.length&&-1===e.indexOf(t.name)||(t.envMap=i,t.reflectivity=n,t.needsUpdate=!0)}))})))}t.exports=AFRAME.registerComponent("cube-env-map",{multiple:!0,schema:{path:{default:""},extension:{default:"jpg",oneOf:["jpg","png"]},enableBackground:{default:!1},reflectivity:{default:1,min:0,max:1},materials:{default:[]}},init:function(){const t=this.data;this.texture=(new THREE.CubeTextureLoader).load([t.path+"posx."+t.extension,t.path+"negx."+t.extension,t.path+"posy."+t.extension,t.path+"negy."+t.extension,t.path+"posz."+t.extension,t.path+"negz."+t.extension]),this.texture.format=THREE.RGBAFormat,this.object3dsetHandler=()=>{const t=this.el.getObject3D("mesh"),i=this.data;e(t,i.materials,this.texture,i.reflectivity)},this.object3dsetHandler(),this.el.addEventListener("object3dset",this.object3dsetHandler)},update:function(t){const i=this.data,n=this.el.getObject3D("mesh");let s=[],a=[];if(i.materials.length&&(t.materials?(s=i.materials.filter((e=>!t.materials.includes(e))),a=t.materials.filter((t=>!i.materials.includes(t)))):s=i.materials),s.length&&e(n,s,this.texture,i.reflectivity),a.length&&e(n,a,null,1),t.materials&&i.reflectivity!==t.reflectivity){const s=i.materials.filter((e=>t.materials.includes(e)));s.length&&e(n,s,this.texture,i.reflectivity)}this.data.enableBackground&&!t.enableBackground?this.setBackground(this.texture):!this.data.enableBackground&&t.enableBackground&&this.setBackground(null)},remove:function(){this.el.removeEventListener("object3dset",this.object3dsetHandler);const t=this.el.getObject3D("mesh"),i=this.data;e(t,i.materials,null,1),i.enableBackground&&this.setBackground(null)},setBackground:function(t){this.el.sceneEl.object3D.background=t}})},9511:function(t){t.exports=AFRAME.registerComponent("grab",{init:function(){this.system=this.el.sceneEl.systems.physics,this.GRABBED_STATE="grabbed",this.grabbing=!1,this.hitEl=null,this.physics=this.el.sceneEl.systems.physics,this.constraint=null,this.onHit=this.onHit.bind(this),this.onGripOpen=this.onGripOpen.bind(this),this.onGripClose=this.onGripClose.bind(this)},play:function(){const t=this.el;t.addEventListener("hit",this.onHit),t.addEventListener("gripdown",this.onGripClose),t.addEventListener("gripup",this.onGripOpen),t.addEventListener("trackpaddown",this.onGripClose),t.addEventListener("trackpadup",this.onGripOpen),t.addEventListener("triggerdown",this.onGripClose),t.addEventListener("triggerup",this.onGripOpen)},pause:function(){const t=this.el;t.removeEventListener("hit",this.onHit),t.removeEventListener("gripdown",this.onGripClose),t.removeEventListener("gripup",this.onGripOpen),t.removeEventListener("trackpaddown",this.onGripClose),t.removeEventListener("trackpadup",this.onGripOpen),t.removeEventListener("triggerdown",this.onGripClose),t.removeEventListener("triggerup",this.onGripOpen)},onGripClose:function(){this.grabbing=!0},onGripOpen:function(){const t=this.hitEl;this.grabbing=!1,t&&(t.removeState(this.GRABBED_STATE),this.hitEl=void 0,this.system.removeConstraint(this.constraint),this.constraint=null)},onHit:function(t){const e=t.detail.el;e.is(this.GRABBED_STATE)||!this.grabbing||this.hitEl||(e.addState(this.GRABBED_STATE),this.hitEl=e,this.constraint=new CANNON.LockConstraint(this.el.body,e.body),this.system.addConstraint(this.constraint))}})},9236:function(t,e,i){i(7642),i(4795),i(9511),i(8240),i(1790)},8240:function(t){t.exports=AFRAME.registerComponent("normal-material",{init:function(){this.material=new THREE.MeshNormalMaterial({flatShading:!0}),this.applyMaterial=this.applyMaterial.bind(this),this.el.addEventListener("object3dset",this.applyMaterial),this.applyMaterial()},remove:function(){this.el.removeEventListener("object3dset",this.applyMaterial)},applyMaterial:function(){this.el.object3D.traverse((t=>{t.isMesh&&(t.material=this.material)}))}})},1790:function(t){t.exports=AFRAME.registerComponent("sphere-collider",{schema:{enabled:{default:!0},interval:{default:80},objects:{default:""},state:{default:"collided"},radius:{default:.05},watch:{default:!0}},init:function(){this.observer=null,this.els=[],this.collisions=[],this.prevCheckTime=void 0,this.eventDetail={},this.handleHit=this.handleHit.bind(this),this.handleHitEnd=this.handleHitEnd.bind(this)},play:function(){const t=this.el.sceneEl;this.data.watch&&(this.observer=new MutationObserver(this.update.bind(this,null)),this.observer.observe(t,{childList:!0,subtree:!0}))},pause:function(){this.observer&&(this.observer.disconnect(),this.observer=null)},update:function(){const t=this.data;let e;e=t.objects?this.el.sceneEl.querySelectorAll(t.objects):this.el.sceneEl.children,this.els=Array.prototype.slice.call(e)},tick:function(){const t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Vector3,n=new THREE.Vector3,s=new THREE.Box3,a=[],o=new Map;return function(r){if(!this.data.enabled)return;const h=this.prevCheckTime;if(h&&r-h<this.data.interval)return;this.prevCheckTime=r;const l=this.el,c=this.data;let d;var u;l.getObject3D("mesh")&&(a.length=0,o.clear(),l.object3D.getWorldPosition(t),l.object3D.getWorldScale(i),d=c.radius*(u=i,Math.max(u.x,u.y,u.z)),this.els.forEach((function(i){let r,h,l,c;if(!i.isEntity)return;if(h=i.getObject3D("mesh"),!h)return;if(s.setFromObject(h).getSize(n),c=Math.max(n.x,n.y,n.z)/2,r=Math.sqrt(2*c*c),s.getCenter(e),!r)return;l=t.distanceTo(e),l<r+d&&(a.push(i),o.set(i,l))})),a.sort(((t,e)=>o.get(t)>o.get(e)?1:-1)).forEach(this.handleHit),this.collisions.filter((t=>!o.has(t))).forEach(this.handleHitEnd),function(t,e){t.length=0;for(let i=0;i<e.length;i++)t[i]=e[i]}(this.collisions,a))}}(),handleHit:function(t){t.emit("hit"),t.addState(this.data.state),this.eventDetail.el=t,this.el.emit("hit",this.eventDetail)},handleHitEnd:function(t){t.emit("hitend"),t.removeState(this.data.state),this.eventDetail.el=t,this.el.emit("hitend",this.eventDetail)}})},2578:function(t,e,i){i(8453),i(1250),i(1465)},1250:function(t){t.exports=AFRAME.registerComponent("nav-agent",{schema:{destination:{type:"vec3"},active:{default:!1},speed:{default:2}},init:function(){this.system=this.el.sceneEl.systems.nav,this.system.addAgent(this),this.group=null,this.path=[],this.raycaster=new THREE.Raycaster},remove:function(){this.system.removeAgent(this)},update:function(){this.path.length=0},updateNavLocation:function(){this.group=null,this.path=[]},tick:function(){const t=new THREE.Vector3,e=new THREE.Vector3,i=new THREE.Vector3;return function(n,s){const a=this.el,o=this.data,r=this.raycaster,h=o.speed*s/1e3;if(!o.active)return;if(!this.path.length){const e=this.el.object3D.position;this.group=this.group||this.system.getGroup(e),this.path=this.system.getPath(e,t.copy(o.destination),this.group)||[],a.emit("navigation-start")}if(!this.path.length)return console.warn("[nav] Unable to find path to %o.",o.destination),this.el.setAttribute("nav-agent",{active:!1}),void a.emit("navigation-end");const l=a.object3D.position,c=this.path[0];e.subVectors(c,l);let d;if(e.length()<h){if(this.path.shift(),!this.path.length)return this.el.setAttribute("nav-agent",{active:!1}),void a.emit("navigation-end");i.copy(l),d=this.path[0]}else i.copy(e.setLength(h)).add(l),d=c;d.y=l.y,a.object3D.lookAt(d),r.ray.origin.copy(i),r.ray.origin.y+=1.5,r.ray.direction={x:0,y:-1,z:0};const u=r.intersectObject(this.system.getNavMesh());u.length?(e.subVectors(u[0].point,l),l.add(e.setLength(h))):l.copy(i)}}()})},8453:function(t){t.exports=AFRAME.registerComponent("nav-mesh",{schema:{nodeName:{type:"string"}},init:function(){this.system=this.el.sceneEl.systems.nav,this.hasLoadedNavMesh=!1,this.nodeName=this.data.nodeName,this.el.addEventListener("object3dset",this.loadNavMesh.bind(this))},play:function(){this.hasLoadedNavMesh||this.loadNavMesh()},loadNavMesh:function(){var t=this;const e=this.el.getObject3D("mesh");this.el.sceneEl.object3D;if(!e)return;let i;if(e.traverse((e=>{!e.isMesh||t.nodeName&&e.name!==t.nodeName||(i=e)})),!i)return;const n=i.geometry.clone();i.updateWorldMatrix(!0,!1),n.applyMatrix4(i.matrixWorld),this.system.setNavMeshGeometry(n),this.hasLoadedNavMesh=!0}})},1465:function(t,e,i){const{Pathfinding:n}=i(6594),s=new n,a="level";t.exports=AFRAME.registerSystem("nav",{init:function(){this.navMesh=null,this.agents=new Set},setNavMeshGeometry:function(t){this.navMesh=new THREE.Mesh(t),s.setZoneData(a,n.createZone(t)),Array.from(this.agents).forEach((t=>t.updateNavLocation()))},getNavMesh:function(){return this.navMesh},addAgent:function(t){this.agents.add(t)},removeAgent:function(t){this.agents.delete(t)},getPath:function(t,e,i){return this.navMesh?s.findPath(t,e,a,i):null},getGroup:function(t){return this.navMesh?s.getGroup(a,t):null},getNode:function(t,e){return this.navMesh?s.getClosestNode(t,a,e,!0):null},clampStep:function(t,e,i,n,o){return this.navMesh?n?s.clampStep(t,e,n,a,i,o):(o.copy(e),this.getNode(e,i)):(o.copy(e),null)}})},386:function(t){t.exports=AFRAME.registerPrimitive("a-grid",{defaultComponents:{geometry:{primitive:"plane",width:75,height:75},rotation:{x:-90,y:0,z:0},material:{src:"url(https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v1.16.3/assets/grid.png)",repeat:"75 75"}},mappings:{width:"geometry.width",height:"geometry.height",src:"material.src"}})},9307:function(t){t.exports.Primitive=AFRAME.registerPrimitive("a-ocean",{defaultComponents:{ocean:{},rotation:{x:-90,y:0,z:0}},mappings:{width:"ocean.width",depth:"ocean.depth",density:"ocean.density",amplitude:"ocean.amplitude",amplitudeVariance:"ocean.amplitudeVariance",speed:"ocean.speed",speedVariance:"ocean.speedVariance",color:"ocean.color",opacity:"ocean.opacity"}}),t.exports.Component=AFRAME.registerComponent("ocean",{schema:{width:{default:10,min:0},depth:{default:10,min:0},density:{default:10},amplitude:{default:.1},amplitudeVariance:{default:.3},speed:{default:1},speedVariance:{default:2},color:{default:"#7AD2F7",type:"color"},opacity:{default:.8}},play:function(){const t=this.el,e=this.data;let i=t.components.material;const n=new THREE.PlaneGeometry(e.width,e.depth,e.density,e.density);this.waves=[];const s=n.getAttribute("position");for(let t=0;t<s.count;t++)this.waves.push({z:s.getZ(t),ang:Math.random()*Math.PI*2,amp:e.amplitude+Math.random()*e.amplitudeVariance,speed:(e.speed+Math.random()*e.speedVariance)/1e3});i||(i={},i.material=new THREE.MeshPhongMaterial({color:e.color,transparent:e.opacity<1,opacity:e.opacity,flatShading:!0})),this.mesh=new THREE.Mesh(n,i.material),t.setObject3D("mesh",this.mesh)},remove:function(){this.el.removeObject3D("mesh")},tick:function(t,e){if(!e)return;const i=this.mesh.geometry.getAttribute("position");for(let t=0;t<i.count;t++){const n=this.waves[t],s=n.z+Math.sin(n.ang)*n.amp;i.setZ(t,s),n.ang+=n.speed*e}i.needsUpdate=!0}})},699:function(t){t.exports.Primitive=AFRAME.registerPrimitive("a-tube",{defaultComponents:{tube:{}},mappings:{path:"tube.path",segments:"tube.segments",radius:"tube.radius","radial-segments":"tube.radialSegments",closed:"tube.closed"}}),t.exports.Component=AFRAME.registerComponent("tube",{schema:{path:{default:[]},segments:{default:64},radius:{default:1},radialSegments:{default:8},closed:{default:!1}},init:function(){const t=this.el,e=this.data;let i=t.components.material;if(!e.path.length)return void console.error("[a-tube] `path` property expected but not found.");const n=new THREE.CatmullRomCurve3(e.path.map((function(t){return t=t.split(" "),new THREE.Vector3(Number(t[0]),Number(t[1]),Number(t[2]))}))),s=new THREE.TubeGeometry(n,e.segments,e.radius,e.radialSegments,e.closed);i||(i={},i.material=new THREE.MeshPhongMaterial),this.mesh=new THREE.Mesh(s,i.material),this.el.setObject3D("mesh",this.mesh)},update:function(t){Object.keys(t).length&&(this.remove(),this.init())},remove:function(){this.mesh&&this.el.removeObject3D("mesh")}})},6699:function(t,e,i){i(386),i(9307),i(699)}}]);