(self.webpackChunkmetaverse_experience=self.webpackChunkmetaverse_experience||[]).push([[824],{9340:(e,t,i)=>{var s=i(3687);const{threeToCannon:n,ShapeType:o}=i(5264);new THREE.Quaternion;i(2130);var a,r,d={dependencies:["velocity"],schema:{mass:{default:5,if:{type:"dynamic"}},linearDamping:{default:.01,if:{type:"dynamic"}},angularDamping:{default:.01,if:{type:"dynamic"}},shape:{default:"auto",oneOf:["auto","box","cylinder","sphere","hull","mesh","none"]},cylinderAxis:{default:"y",oneOf:["x","y","z"]},sphereRadius:{default:NaN},type:{default:"dynamic",oneOf:["static","dynamic"]}},init:function(){this.system=this.el.sceneEl.systems.physics,this.el.sceneEl.hasLoaded?this.initBody():this.el.sceneEl.addEventListener("loaded",this.initBody.bind(this))},initBody:function(){var e=this.el,t=this.data,i=this.el.object3D,a=i.position,r=i.quaternion;if(this.body=new s.Body({mass:"static"===t.type?0:t.mass||0,material:this.system.getMaterial("defaultMaterial"),position:new s.Vec3(a.x,a.y,a.z),quaternion:new s.Quaternion(r.x,r.y,r.z,r.w),linearDamping:t.linearDamping,angularDamping:t.angularDamping,type:"dynamic"===t.type?s.Body.DYNAMIC:s.Body.STATIC}),this.el.object3D.updateMatrixWorld(!0),"none"!==t.shape){var d="auto"===t.shape?void 0:AFRAME.utils.extend({},this.data,{type:o[t.shape.toUpperCase()]}),{shape:h,offset:c,orientation:p}=function(e,t){return n(e,t)}(this.el.object3D,d);if(!h)return void e.addEventListener("object3dset",this.initBody.bind(this));this.body.addShape(h,c,p),this.system.debug&&(this.shouldUpdateWireframe=!0),this.hasShape=!0}this.el.body=this.body,this.body.el=e,this.isPlaying&&this._play(),this.hasShape&&this.el.emit("body-loaded",{body:this.el.body})},addShape:function(e,t,i){"none"===this.data.shape?e?this.body?(this.body.addShape(e,t,i),this.system.debug&&(this.shouldUpdateWireframe=!0),this.shouldUpdateBody=!0):console.warn("shape cannot be added before body is loaded"):console.warn("shape cannot be null"):console.warn("shape can only be added if shape property is none")},tick:function(){this.shouldUpdateBody&&(this._pause(),this.hasShape=!0,this._play(),this.el.emit("body-loaded",{body:this.el.body}),this.shouldUpdateBody=!1),this.shouldUpdateWireframe&&(this.createWireframe(this.body),this.shouldUpdateWireframe=!1)},play:function(){this._play()},_play:function(){this.hasShape&&(this.syncToPhysics(),this.system.addComponent(this),this.system.addBody(this.body),this.wireframe&&this.el.sceneEl.object3D.add(this.wireframe))},pause:function(){this._pause()},_pause:function(){this.hasShape&&(this.system.removeComponent(this),this.body&&this.system.removeBody(this.body),this.wireframe&&this.el.sceneEl.object3D.remove(this.wireframe))},update:function(e){if(this.body){var t=this.data;null!=e.type&&t.type!=e.type&&(this.body.type="dynamic"===t.type?s.Body.DYNAMIC:s.Body.STATIC),this.body.mass=t.mass||0,"dynamic"===t.type&&(this.body.linearDamping=t.linearDamping,this.body.angularDamping=t.angularDamping),t.mass!==e.mass&&this.body.updateMassProperties(),this.body.updateProperties&&this.body.updateProperties()}},remove:function(){this.body&&(delete this.body.el,delete this.body),delete this.el.body,delete this.wireframe},beforeStep:function(){0===this.body.mass&&this.syncToPhysics()},step:function(){0!==this.body.mass&&this.syncFromPhysics()},createWireframe:function(e){var t,i;this.wireframe&&(this.el.sceneEl.object3D.remove(this.wireframe),delete this.wireframe),this.wireframe=new THREE.Object3D,this.el.sceneEl.object3D.add(this.wireframe);for(var n=new THREE.Quaternion,o=0;o<this.body.shapes.length;o++){t=this.body.shapeOffsets[o],n.copy(this.body.shapeOrientations[o]),i=s.shape2mesh(this.body).children[o];var a=new THREE.LineSegments(new THREE.EdgesGeometry(i.geometry),new THREE.LineBasicMaterial({color:16711680}));t&&a.position.copy(t),n&&a.quaternion.copy(n),this.wireframe.add(a)}this.syncWireframe()},syncWireframe:function(){var e,t=this.wireframe;this.wireframe&&(t.quaternion.copy(this.body.quaternion),t.orientation&&t.quaternion.multiply(t.orientation),t.position.copy(this.body.position),t.offset&&(e=t.offset.clone().applyQuaternion(t.quaternion),t.position.add(e)),t.updateMatrix())},syncToPhysics:(a=new THREE.Quaternion,r=new THREE.Vector3,function(){var e=this.el,t=e.parentEl,i=this.body;i&&(e.components.velocity&&i.velocity.copy(e.getAttribute("velocity")),t.isScene?(i.quaternion.copy(e.object3D.quaternion),i.position.copy(e.object3D.position)):(e.object3D.getWorldQuaternion(a),i.quaternion.copy(a),e.object3D.getWorldPosition(r),i.position.copy(r)),this.body.updateProperties&&this.body.updateProperties(),this.wireframe&&this.syncWireframe())}),syncFromPhysics:function(){var e=new THREE.Vector3,t=new THREE.Quaternion,i=new THREE.Quaternion;return function(){var s=this.el,n=s.parentEl,o=this.body;o&&n&&(n.isScene?(s.object3D.quaternion.copy(o.quaternion),s.object3D.position.copy(o.position)):(t.copy(o.quaternion),n.object3D.getWorldQuaternion(i),t.premultiply(i.invert()),s.object3D.quaternion.copy(t),e.copy(o.position),n.object3D.worldToLocal(e),s.object3D.position.copy(e)),this.wireframe&&this.syncWireframe())}}()};e.exports.definition=d,e.exports.Component=AFRAME.registerComponent("body",d)},1856:(e,t,i)=>{var s=i(9340),n=AFRAME.utils.extend({},s.definition);e.exports=AFRAME.registerComponent("dynamic-body",n)},8290:(e,t,i)=>{var s=i(9340),n=AFRAME.utils.extend({},s.definition);n.schema=AFRAME.utils.extend({},s.definition.schema,{type:{default:"static",oneOf:["static","dynamic"]},mass:{default:0}}),e.exports=AFRAME.registerComponent("static-body",n)},6565:(e,t,i)=>{var s=i(3687);e.exports=AFRAME.registerComponent("constraint",{multiple:!0,schema:{type:{default:"lock",oneOf:["coneTwist","distance","hinge","lock","pointToPoint"]},target:{type:"selector"},maxForce:{default:1e6,min:0},collideConnected:{default:!0},wakeUpBodies:{default:!0},distance:{default:0,min:0},pivot:{type:"vec3"},targetPivot:{type:"vec3"},axis:{type:"vec3",default:{x:0,y:0,z:1}},targetAxis:{type:"vec3",default:{x:0,y:0,z:1}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.constraint=null},remove:function(){this.constraint&&(this.system.removeConstraint(this.constraint),this.constraint=null)},update:function(){var e=this.el,t=this.data;this.remove(),e.body&&t.target.body?(this.constraint=this.createConstraint(),this.system.addConstraint(this.constraint)):(e.body?t.target:e).addEventListener("body-loaded",this.update.bind(this,{}))},createConstraint:function(){var e,t=this.data,i=new s.Vec3(t.pivot.x,t.pivot.y,t.pivot.z),n=new s.Vec3(t.targetPivot.x,t.targetPivot.y,t.targetPivot.z),o=new s.Vec3(t.axis.x,t.axis.y,t.axis.z),a=new s.Vec3(t.targetAxis.x,t.targetAxis.y,t.targetAxis.z);switch(t.type){case"lock":(e=new s.LockConstraint(this.el.body,t.target.body,{maxForce:t.maxForce})).type="LockConstraint";break;case"distance":(e=new s.DistanceConstraint(this.el.body,t.target.body,t.distance,t.maxForce)).type="DistanceConstraint";break;case"hinge":(e=new s.HingeConstraint(this.el.body,t.target.body,{pivotA:i,pivotB:n,axisA:o,axisB:a,maxForce:t.maxForce})).type="HingeConstraint";break;case"coneTwist":(e=new s.ConeTwistConstraint(this.el.body,t.target.body,{pivotA:i,pivotB:n,axisA:o,axisB:a,maxForce:t.maxForce})).type="ConeTwistConstraint";break;case"pointToPoint":(e=new s.PointToPointConstraint(this.el.body,i,t.target.body,n,t.maxForce)).type="PointToPointConstraint";break;default:throw new Error("[constraint] Unexpected type: "+t.type)}return e.collideConnected=t.collideConnected,e}})},6492:(e,t,i)=>{e.exports={velocity:i(9642),registerAll:function(e){this._registered||((e=e||window.AFRAME).components.velocity||e.registerComponent("velocity",this.velocity),this._registered=!0)}}},9642:e=>{e.exports=AFRAME.registerComponent("velocity",{schema:{type:"vec3"},init:function(){this.system=this.el.sceneEl.systems.physics,this.system&&this.system.addComponent(this)},remove:function(){this.system&&this.system.removeComponent(this)},tick:function(e,t){t&&(this.system||this.afterStep(e,t))},afterStep:function(e,t){if(t){var i=this.el.sceneEl.systems.physics||{data:{maxInterval:1/60}},s=this.el.getAttribute("velocity")||{x:0,y:0,z:0},n=this.el.object3D.position||{x:0,y:0,z:0};t=Math.min(t,1e3*i.data.maxInterval),this.el.object3D.position.set(n.x+s.x*t/1e3,n.y+s.y*t/1e3,n.z+s.z*t/1e3)}}})},3396:(e,t,i)=>{i(5406);const s=i(70),n=s.SHAPE,o=s.FIT;var a={schema:{type:{default:n.HULL,oneOf:[n.BOX,n.CYLINDER,n.SPHERE,n.CAPSULE,n.CONE,n.HULL,n.HACD,n.VHACD,n.MESH,n.HEIGHTFIELD]},fit:{default:o.ALL,oneOf:[o.ALL,o.MANUAL]},halfExtents:{type:"vec3",default:{x:1,y:1,z:1}},minHalfExtent:{default:0},maxHalfExtent:{default:Number.POSITIVE_INFINITY},sphereRadius:{default:NaN},cylinderAxis:{default:"y",oneOf:["x","y","z"]},margin:{default:.01},offset:{type:"vec3",default:{x:0,y:0,z:0}},orientation:{type:"vec4",default:{x:0,y:0,z:0,w:1}},heightfieldData:{default:[]},heightfieldDistance:{default:1},includeInvisible:{default:!1}},multiple:!0,init:function(){this.system=this.el.sceneEl.systems.physics,this.collisionShapes=[];let e=this.el;for(this.body=e.components["ammo-body"]||null;!this.body&&e.parentNode!=this.el.sceneEl;)e=e.parentNode,e.components["ammo-body"]&&(this.body=e.components["ammo-body"]);if(this.body){if(this.data.fit!==o.MANUAL){if(!this.el.object3DMap.mesh)return void console.error("Cannot use FIT.ALL without object3DMap.mesh");this.mesh=this.el.object3DMap.mesh}this.body.addShapeComponent(this)}else console.warn("body not found")},getMesh:function(){return this.mesh||null},addShapes:function(e){this.collisionShapes=e},getShapes:function(){return this.collisionShapes},remove:function(){if(this.body)for(this.body.removeShapeComponent(this);this.collisionShapes.length>0;){const e=this.collisionShapes.pop();e.destroy(),Ammo.destroy(e.localTransform)}}};e.exports.definition=a,e.exports.Component=AFRAME.registerComponent("ammo-shape",a)},1577:(e,t,i)=>{var s=i(3687),n={schema:{shape:{default:"box",oneOf:["box","sphere","cylinder"]},offset:{type:"vec3",default:{x:0,y:0,z:0}},orientation:{type:"vec4",default:{x:0,y:0,z:0,w:1}},radius:{type:"number",default:1,if:{shape:["sphere"]}},halfExtents:{type:"vec3",default:{x:.5,y:.5,z:.5},if:{shape:["box"]}},radiusTop:{type:"number",default:1,if:{shape:["cylinder"]}},radiusBottom:{type:"number",default:1,if:{shape:["cylinder"]}},height:{type:"number",default:1,if:{shape:["cylinder"]}},numSegments:{type:"int",default:8,if:{shape:["cylinder"]}}},multiple:!0,init:function(){this.el.sceneEl.hasLoaded?this.initShape():this.el.sceneEl.addEventListener("loaded",this.initShape.bind(this))},initShape:function(){this.bodyEl=this.el;for(var e=this._findType(this.bodyEl),t=this.data;!e&&this.bodyEl.parentNode!=this.el.sceneEl;)this.bodyEl=this.bodyEl.parentNode,e=this._findType(this.bodyEl);if(e){var i,n,o,a=new THREE.Vector3;switch(this.bodyEl.object3D.getWorldScale(a),t.hasOwnProperty("offset")&&(n=new s.Vec3(t.offset.x*a.x,t.offset.y*a.y,t.offset.z*a.z)),t.hasOwnProperty("orientation")&&(o=new s.Quaternion).copy(t.orientation),t.shape){case"sphere":i=new s.Sphere(t.radius*a.x);break;case"box":var r=new s.Vec3(t.halfExtents.x*a.x,t.halfExtents.y*a.y,t.halfExtents.z*a.z);i=new s.Box(r);break;case"cylinder":i=new s.Cylinder(t.radiusTop*a.x,t.radiusBottom*a.x,t.height*a.y,t.numSegments);var d=new s.Quaternion;d.setFromEuler(90*THREE.MathUtils.DEG2RAD,0,0,"XYZ").normalize(),o.mult(d,o);break;default:return void console.warn(t.shape+" shape not supported")}this.bodyEl.body?this.bodyEl.components[e].addShape(i,n,o):this.bodyEl.addEventListener("body-loaded",(function(){this.bodyEl.components[e].addShape(i,n,o)}),{once:!0})}else console.warn("body not found")},_findType:function(e){return e.hasAttribute("body")?"body":e.hasAttribute("dynamic-body")?"dynamic-body":e.hasAttribute("static-body")?"static-body":null},remove:function(){this.bodyEl.parentNode&&console.warn("removing shape component not currently supported")}};e.exports.definition=n,e.exports.Component=AFRAME.registerComponent("shape",n)},3922:(e,t,i)=>{var s=i(3687);e.exports=AFRAME.registerComponent("spring",{multiple:!0,schema:{target:{type:"selector"},restLength:{default:1,min:0},stiffness:{default:100,min:0},damping:{default:1,min:0},localAnchorA:{type:"vec3",default:{x:0,y:0,z:0}},localAnchorB:{type:"vec3",default:{x:0,y:0,z:0}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.system.addComponent(this),this.isActive=!0,this.spring=null},update:function(e){var t=this.el,i=this.data;i.target?t.body&&i.target.body?(this.createSpring(),this.updateSpring(e)):(t.body?i.target:t).addEventListener("body-loaded",this.update.bind(this,{})):console.warn("Spring: invalid target specified.")},updateSpring:function(e){if(this.spring){var t=this.data,i=this.spring;Object.keys(t).forEach((function(s){if(t[s]!==e[s]){if("target"===s)return void(i.bodyB=t.target.body);i[s]=t[s]}}))}else console.warn("Spring: Component attempted to change spring before its created. No changes made.")},createSpring:function(){this.spring||(this.spring=new s.Spring(this.el.body))},step:function(e,t){return this.spring&&this.isActive?this.spring.applyForce():void 0},play:function(){this.isActive=!0},pause:function(){this.isActive=!1},remove:function(){this.spring&&delete this.spring,this.spring=null}})},70:e=>{e.exports={GRAVITY:-9.8,MAX_INTERVAL:4/60,ITERATIONS:10,CONTACT_MATERIAL:{friction:.01,restitution:.3,contactEquationStiffness:1e8,contactEquationRelaxation:3,frictionEquationStiffness:1e8,frictionEquationRegularization:3},ACTIVATION_STATE:{ACTIVE_TAG:"active",ISLAND_SLEEPING:"islandSleeping",WANTS_DEACTIVATION:"wantsDeactivation",DISABLE_DEACTIVATION:"disableDeactivation",DISABLE_SIMULATION:"disableSimulation"},COLLISION_FLAG:{STATIC_OBJECT:1,KINEMATIC_OBJECT:2,NO_CONTACT_RESPONSE:4,CUSTOM_MATERIAL_CALLBACK:8,CHARACTER_OBJECT:16,DISABLE_VISUALIZE_OBJECT:32,DISABLE_SPU_COLLISION_PROCESSING:64},TYPE:{STATIC:"static",DYNAMIC:"dynamic",KINEMATIC:"kinematic"},SHAPE:{BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},FIT:{ALL:"all",MANUAL:"manual"},CONSTRAINT:{LOCK:"lock",FIXED:"fixed",SPRING:"spring",SLIDER:"slider",HINGE:"hinge",CONE_TWIST:"coneTwist",POINT_TO_POINT:"pointToPoint"}}}}]);