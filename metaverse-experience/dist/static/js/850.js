(self.webpackChunkmetaverse_experience=self.webpackChunkmetaverse_experience||[]).push([[850],{8709:function(t,e,i){i(2694);const s=i(5406),o=i(1389),n=o.ACTIVATION_STATE,a=o.COLLISION_FLAG,r=o.SHAPE,d=o.TYPE,h=(o.FIT,[n.ACTIVE_TAG,n.ISLAND_SLEEPING,n.WANTS_DEACTIVATION,n.DISABLE_DEACTIVATION,n.DISABLE_SIMULATION]),l=0,c=1;function p(t,e,i){return Math.abs(e.x-i.x)<t&&Math.abs(e.y-i.y)<t&&Math.abs(e.z-i.z)<t}function y(t,e,i){return Math.abs(e.x()-i.x())<t&&Math.abs(e.y()-i.y())<t&&Math.abs(e.z()-i.z())<t}let m={schema:{loadedEvent:{default:""},mass:{default:1},gravity:{type:"vec3",default:{x:0,y:-9.8,z:0}},linearDamping:{default:.01},angularDamping:{default:.01},linearSleepingThreshold:{default:1.6},angularSleepingThreshold:{default:2.5},angularFactor:{type:"vec3",default:{x:1,y:1,z:1}},activationState:{default:n.ACTIVE_TAG,oneOf:h},type:{default:"dynamic",oneOf:[d.STATIC,d.DYNAMIC,d.KINEMATIC]},emitCollisionEvents:{default:!1},disableCollision:{default:!1},collisionFilterGroup:{default:1},collisionFilterMask:{default:1},scaleAutoUpdate:{default:!0}},init:function(){this.system=this.el.sceneEl.systems.physics,this.shapeComponents=[],""===this.data.loadedEvent?this.loadedEventFired=!0:this.el.addEventListener(this.data.loadedEvent,(()=>{this.loadedEventFired=!0}),{once:!0}),this.system.initialized&&this.loadedEventFired&&this.initBody()},initBody:function(){const t=new THREE.Vector3,e=new THREE.Quaternion;new THREE.Box3;return function(){const i=this.el,s=this.data;this.localScaling=new Ammo.btVector3;const o=this.el.object3D;o.getWorldPosition(t),o.getWorldQuaternion(e),this.prevScale=new THREE.Vector3(1,1,1),this.prevNumChildShapes=0,this.msTransform=new Ammo.btTransform,this.msTransform.setIdentity(),this.rotation=new Ammo.btQuaternion(e.x,e.y,e.z,e.w),this.msTransform.getOrigin().setValue(t.x,t.y,t.z),this.msTransform.setRotation(this.rotation),this.motionState=new Ammo.btDefaultMotionState(this.msTransform),this.localInertia=new Ammo.btVector3(0,0,0),this.compoundShape=new Ammo.btCompoundShape(!0),this.rbInfo=new Ammo.btRigidBodyConstructionInfo(s.mass,this.motionState,this.compoundShape,this.localInertia),this.body=new Ammo.btRigidBody(this.rbInfo),this.body.setActivationState(h.indexOf(s.activationState)+1),this.body.setSleepingThresholds(s.linearSleepingThreshold,s.angularSleepingThreshold),this.body.setDamping(s.linearDamping,s.angularDamping);const n=new Ammo.btVector3(s.angularFactor.x,s.angularFactor.y,s.angularFactor.z);this.body.setAngularFactor(n),Ammo.destroy(n);const a=new Ammo.btVector3(s.gravity.x,s.gravity.y,s.gravity.z);y(.001,a,this.system.driver.physicsWorld.getGravity())||(this.body.setGravity(a),this.body.setFlags(c)),Ammo.destroy(a),this.updateCollisionFlags(),this.el.body=this.body,this.body.el=i,this.isLoaded=!0,this.el.emit("body-loaded",{body:this.el.body}),this._addToSystem()}}(),tick:function(){this.system.initialized&&!this.isLoaded&&this.loadedEventFired&&this.initBody()},_updateShapes:function(){const t=[r.HULL,r.HACD,r.VHACD];return function(){let e=!1;const i=this.el.object3D;if(this.data.scaleAutoUpdate&&this.prevScale&&!p(.001,i.scale,this.prevScale)&&(this.prevScale.copy(i.scale),e=!0,this.localScaling.setValue(this.prevScale.x,this.prevScale.y,this.prevScale.z),this.compoundShape.setLocalScaling(this.localScaling)),this.shapeComponentsChanged){this.shapeComponentsChanged=!1,e=!0;for(let t=0;t<this.shapeComponents.length;t++){const e=this.shapeComponents[t];0===e.getShapes().length&&this._createCollisionShape(e);const i=e.getShapes();for(let t=0;t<i.length;t++){const e=i[t];e.added||(this.compoundShape.addChildShape(e.localTransform,e),e.added=!0)}}this.data.type===d.DYNAMIC&&this.updateMass(),this.system.driver.updateBody(this.body)}if(this.system.debug&&(e||!this.polyHedralFeaturesInitialized)){for(let e=0;e<this.shapeComponents.length;e++){const i=this.shapeComponents[e].getShapes();for(let e=0;e<i.length;e++){const s=i[e];-1!==t.indexOf(s.type)&&s.initializePolyhedralFeatures(0)}}this.polyHedralFeaturesInitialized=!0}}}(),_createCollisionShape:function(t){const e=t.data,i=s.createCollisionShapes(t.getMesh(),e);t.addShapes(i)},play:function(){this.isLoaded&&this._addToSystem()},_addToSystem:function(){this.addedToSystem||(this.system.addBody(this.body,this.data.collisionFilterGroup,this.data.collisionFilterMask),this.data.emitCollisionEvents&&this.system.driver.addEventListener(this.body),this.system.addComponent(this),this.addedToSystem=!0)},pause:function(){this.addedToSystem&&(this.system.removeComponent(this),this.system.removeBody(this.body),this.addedToSystem=!1)},update:function(t){if(this.isLoaded){if(!this.hasUpdated)return void(this.hasUpdated=!0);const e=this.data;if(t.type===e.type&&t.disableCollision===e.disableCollision||this.updateCollisionFlags(),t.activationState!==e.activationState&&(this.body.forceActivationState(h.indexOf(e.activationState)+1),e.activationState===n.ACTIVE_TAG&&this.body.activate(!0)),t.collisionFilterGroup!==e.collisionFilterGroup||t.collisionFilterMask!==e.collisionFilterMask){const t=this.body.getBroadphaseProxy();t.set_m_collisionFilterGroup(e.collisionFilterGroup),t.set_m_collisionFilterMask(e.collisionFilterMask),this.system.driver.broadphase.getOverlappingPairCache().removeOverlappingPairsContainingProxy(t,this.system.driver.dispatcher)}if(t.linearDamping==e.linearDamping&&t.angularDamping==e.angularDamping||this.body.setDamping(e.linearDamping,e.angularDamping),!p(.001,t.gravity,e.gravity)){const t=new Ammo.btVector3(e.gravity.x,e.gravity.y,e.gravity.z);y(.001,t,this.system.driver.physicsWorld.getGravity())?this.body.setFlags(l):this.body.setFlags(c),this.body.setGravity(t),Ammo.destroy(t)}if(t.linearSleepingThreshold==e.linearSleepingThreshold&&t.angularSleepingThreshold==e.angularSleepingThreshold||this.body.setSleepingThresholds(e.linearSleepingThreshold,e.angularSleepingThreshold),!p(.001,t.angularFactor,e.angularFactor)){const t=new Ammo.btVector3(e.angularFactor.x,e.angularFactor.y,e.angularFactor.z);this.body.setAngularFactor(t),Ammo.destroy(t)}}},remove:function(){this.triMesh&&Ammo.destroy(this.triMesh),this.localScaling&&Ammo.destroy(this.localScaling),this.compoundShape&&Ammo.destroy(this.compoundShape),this.body&&(Ammo.destroy(this.body),delete this.body),Ammo.destroy(this.rbInfo),Ammo.destroy(this.msTransform),Ammo.destroy(this.motionState),Ammo.destroy(this.localInertia),Ammo.destroy(this.rotation)},beforeStep:function(){this._updateShapes(),this.data.type!==d.DYNAMIC&&this.syncToPhysics()},step:function(){this.data.type===d.DYNAMIC&&this.syncFromPhysics()},syncToPhysics:function(){const t=new THREE.Quaternion,e=new THREE.Vector3,i=new THREE.Vector3,s=new THREE.Vector3;return function(){const o=this.el,n=o.parentEl;if(!this.body)return;this.motionState.getWorldTransform(this.msTransform),n.isScene?(e.copy(o.object3D.position),t.copy(o.object3D.quaternion)):(o.object3D.getWorldPosition(e),o.object3D.getWorldQuaternion(t));const a=this.msTransform.getOrigin();s.set(a.x(),a.y(),a.z());const r=this.msTransform.getRotation();i.set(r.x(),r.y(),r.z(),r.w()),p(.001,e,s)&&function(t,e,i){return Math.abs(e.x-i.x)<t&&Math.abs(e.y-i.y)<t&&Math.abs(e.z-i.z)<t&&Math.abs(e.w-i.w)<t||Math.abs(e.x+i.x)<t&&Math.abs(e.y+i.y)<t&&Math.abs(e.z+i.z)<t&&Math.abs(e.w+i.w)<t}(.001,t,i)||(this.body.isActive()||this.body.activate(!0),this.msTransform.getOrigin().setValue(e.x,e.y,e.z),this.rotation.setValue(t.x,t.y,t.z,t.w),this.msTransform.setRotation(this.rotation),this.motionState.setWorldTransform(this.msTransform),this.data.type===d.STATIC&&this.body.setCenterOfMassTransform(this.msTransform))}}(),syncFromPhysics:function(){const t=new THREE.Vector3,e=new THREE.Quaternion,i=new THREE.Quaternion;return function(){this.motionState.getWorldTransform(this.msTransform);const s=this.msTransform.getOrigin(),o=this.msTransform.getRotation(),n=this.el,a=n.parentEl;this.body&&a&&(a.isScene?(n.object3D.position.set(s.x(),s.y(),s.z()),n.object3D.quaternion.set(o.x(),o.y(),o.z(),o.w())):(e.set(o.x(),o.y(),o.z(),o.w()),a.object3D.getWorldQuaternion(i),e.multiply(i.invert()),n.object3D.quaternion.copy(e),t.set(s.x(),s.y(),s.z()),a.object3D.worldToLocal(t),n.object3D.position.copy(t)))}}(),addShapeComponent:function(t){t.data.type!==r.MESH||this.data.type===d.STATIC?(this.shapeComponents.push(t),this.shapeComponentsChanged=!0):console.warn("non-static mesh colliders not supported")},removeShapeComponent:function(t){const e=this.shapeComponents.indexOf(t);if(this.compoundShape&&-1!==e&&this.body){const s=t.getShapes();for(var i=0;i<s.length;i++)this.compoundShape.removeChildShape(s[i]);this.shapeComponentsChanged=!0,this.shapeComponents.splice(e,1)}},updateMass:function(){const t=this.body.getCollisionShape(),e=this.data.type===d.DYNAMIC?this.data.mass:0;t.calculateLocalInertia(e,this.localInertia),this.body.setMassProps(e,this.localInertia),this.body.updateInertiaTensor()},updateCollisionFlags:function(){let t=this.data.disableCollision?4:0;switch(this.data.type){case d.STATIC:t|=a.STATIC_OBJECT;break;case d.KINEMATIC:t|=a.KINEMATIC_OBJECT;break;default:this.body.applyGravity()}this.body.setCollisionFlags(t),this.updateMass(),this.system.driver.updateBody(this.body)},getVelocity:function(){return this.body.getLinearVelocity()}};t.exports.definition=m,t.exports.Component=AFRAME.registerComponent("ammo-body",m)},5855:function(t,e,i){var s=i(3687),o=i(7270).J;i(6443);var n,a,r={dependencies:["velocity"],schema:{mass:{default:5,if:{type:"dynamic"}},linearDamping:{default:.01,if:{type:"dynamic"}},angularDamping:{default:.01,if:{type:"dynamic"}},shape:{default:"auto",oneOf:["auto","box","cylinder","sphere","hull","mesh","none"]},cylinderAxis:{default:"y",oneOf:["x","y","z"]},sphereRadius:{default:NaN},type:{default:"dynamic",oneOf:["static","dynamic"]}},init:function(){this.system=this.el.sceneEl.systems.physics,this.el.sceneEl.hasLoaded?this.initBody():this.el.sceneEl.addEventListener("loaded",this.initBody.bind(this))},initBody:function(){var t=this.el,e=this.data,i=this.el.object3D,n=i.position,a=i.quaternion;if(this.body=new s.Body({mass:"static"===e.type?0:e.mass||0,material:this.system.getMaterial("defaultMaterial"),position:new s.Vec3(n.x,n.y,n.z),quaternion:new s.Quaternion(a.x,a.y,a.z,a.w),linearDamping:e.linearDamping,angularDamping:e.angularDamping,type:"dynamic"===e.type?s.Body.DYNAMIC:s.Body.STATIC}),this.el.object3D.updateMatrixWorld(!0),"none"!==e.shape){var r="auto"===e.shape?void 0:AFRAME.utils.extend({},this.data,{type:o.Type[e.shape.toUpperCase()]}),d=o(this.el.object3D,r);if(!d)return void t.addEventListener("object3dset",this.initBody.bind(this));this.body.addShape(d,d.offset,d.orientation),this.system.debug&&(this.shouldUpdateWireframe=!0),this.isLoaded=!0}this.el.body=this.body,this.body.el=t,this.isPlaying&&this._play(),this.isLoaded&&this.el.emit("body-loaded",{body:this.el.body})},addShape:function(t,e,i){"none"===this.data.shape?t?this.body?(this.body.addShape(t,e,i),this.system.debug&&(this.shouldUpdateWireframe=!0),this.shouldUpdateBody=!0):console.warn("shape cannot be added before body is loaded"):console.warn("shape cannot be null"):console.warn("shape can only be added if shape property is none")},tick:function(){this.shouldUpdateBody&&(this.isLoaded=!0,this._play(),this.el.emit("body-loaded",{body:this.el.body}),this.shouldUpdateBody=!1),this.shouldUpdateWireframe&&(this.createWireframe(this.body),this.shouldUpdateWireframe=!1)},play:function(){this.isLoaded&&this._play()},_play:function(){this.syncToPhysics(),this.system.addComponent(this),this.system.addBody(this.body),this.wireframe&&this.el.sceneEl.object3D.add(this.wireframe)},pause:function(){this.isLoaded&&this._pause()},_pause:function(){this.system.removeComponent(this),this.body&&this.system.removeBody(this.body),this.wireframe&&this.el.sceneEl.object3D.remove(this.wireframe)},update:function(t){if(this.body){var e=this.data;null!=t.type&&e.type!=t.type&&(this.body.type="dynamic"===e.type?s.Body.DYNAMIC:s.Body.STATIC),this.body.mass=e.mass||0,"dynamic"===e.type&&(this.body.linearDamping=e.linearDamping,this.body.angularDamping=e.angularDamping),e.mass!==t.mass&&this.body.updateMassProperties(),this.body.updateProperties&&this.body.updateProperties()}},remove:function(){this.body&&(delete this.body.el,delete this.body),delete this.el.body,delete this.wireframe},beforeStep:function(){0===this.body.mass&&this.syncToPhysics()},step:function(){0!==this.body.mass&&this.syncFromPhysics()},createWireframe:function(t){var e,i;this.wireframe&&(this.el.sceneEl.object3D.remove(this.wireframe),delete this.wireframe),this.wireframe=new THREE.Object3D,this.el.sceneEl.object3D.add(this.wireframe);for(var o=new THREE.Quaternion,n=0;n<this.body.shapes.length;n++){e=this.body.shapeOffsets[n],o.copy(this.body.shapeOrientations[n]),i=s.shape2mesh(this.body).children[n];var a=new THREE.LineSegments(new THREE.EdgesGeometry(i.geometry),new THREE.LineBasicMaterial({color:16711680}));e&&a.position.copy(e),o&&a.quaternion.copy(o),this.wireframe.add(a)}this.syncWireframe()},syncWireframe:function(){var t,e=this.wireframe;this.wireframe&&(e.quaternion.copy(this.body.quaternion),e.orientation&&e.quaternion.multiply(e.orientation),e.position.copy(this.body.position),e.offset&&(t=e.offset.clone().applyQuaternion(e.quaternion),e.position.add(t)),e.updateMatrix())},syncToPhysics:(n=new THREE.Quaternion,a=new THREE.Vector3,function(){var t=this.el,e=t.parentEl,i=this.body;i&&(t.components.velocity&&i.velocity.copy(t.getAttribute("velocity")),e.isScene?(i.quaternion.copy(t.object3D.quaternion),i.position.copy(t.object3D.position)):(t.object3D.getWorldQuaternion(n),i.quaternion.copy(n),t.object3D.getWorldPosition(a),i.position.copy(a)),this.body.updateProperties&&this.body.updateProperties(),this.wireframe&&this.syncWireframe())}),syncFromPhysics:function(){var t=new THREE.Vector3,e=new THREE.Quaternion,i=new THREE.Quaternion;return function(){var s=this.el,o=s.parentEl,n=this.body;n&&o&&(o.isScene?(s.object3D.quaternion.copy(n.quaternion),s.object3D.position.copy(n.position)):(e.copy(n.quaternion),o.object3D.getWorldQuaternion(i),e.premultiply(i.invert()),s.object3D.quaternion.copy(e),t.copy(n.position),o.object3D.worldToLocal(t),s.object3D.position.copy(t)),this.wireframe&&this.syncWireframe())}}()};t.exports.definition=r,t.exports.Component=AFRAME.registerComponent("body",r)},2339:function(t,e,i){var s=i(5855),o=AFRAME.utils.extend({},s.definition);t.exports=AFRAME.registerComponent("dynamic-body",o)},2712:function(t,e,i){var s=i(5855),o=AFRAME.utils.extend({},s.definition);o.schema=AFRAME.utils.extend({},s.definition.schema,{type:{default:"static",oneOf:["static","dynamic"]},mass:{default:0}}),t.exports=AFRAME.registerComponent("static-body",o)},3953:function(t,e,i){var s=i(3687);t.exports=AFRAME.registerComponent("constraint",{multiple:!0,schema:{type:{default:"lock",oneOf:["coneTwist","distance","hinge","lock","pointToPoint"]},target:{type:"selector"},maxForce:{default:1e6,min:0},collideConnected:{default:!0},wakeUpBodies:{default:!0},distance:{default:0,min:0},pivot:{type:"vec3"},targetPivot:{type:"vec3"},axis:{type:"vec3",default:{x:0,y:0,z:1}},targetAxis:{type:"vec3",default:{x:0,y:0,z:1}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.constraint=null},remove:function(){this.constraint&&(this.system.removeConstraint(this.constraint),this.constraint=null)},update:function(){var t=this.el,e=this.data;this.remove(),t.body&&e.target.body?(this.constraint=this.createConstraint(),this.system.addConstraint(this.constraint)):(t.body?e.target:t).addEventListener("body-loaded",this.update.bind(this,{}))},createConstraint:function(){var t,e=this.data,i=new s.Vec3(e.pivot.x,e.pivot.y,e.pivot.z),o=new s.Vec3(e.targetPivot.x,e.targetPivot.y,e.targetPivot.z),n=new s.Vec3(e.axis.x,e.axis.y,e.axis.z),a=new s.Vec3(e.targetAxis.x,e.targetAxis.y,e.targetAxis.z);switch(e.type){case"lock":(t=new s.LockConstraint(this.el.body,e.target.body,{maxForce:e.maxForce})).type="LockConstraint";break;case"distance":(t=new s.DistanceConstraint(this.el.body,e.target.body,e.distance,e.maxForce)).type="DistanceConstraint";break;case"hinge":(t=new s.HingeConstraint(this.el.body,e.target.body,{pivotA:i,pivotB:o,axisA:n,axisB:a,maxForce:e.maxForce})).type="HingeConstraint";break;case"coneTwist":(t=new s.ConeTwistConstraint(this.el.body,e.target.body,{pivotA:i,pivotB:o,axisA:n,axisB:a,maxForce:e.maxForce})).type="ConeTwistConstraint";break;case"pointToPoint":(t=new s.PointToPointConstraint(this.el.body,i,e.target.body,o,e.maxForce)).type="PointToPointConstraint";break;default:throw new Error("[constraint] Unexpected type: "+e.type)}return t.collideConnected=e.collideConnected,t}})},3410:function(t,e,i){t.exports={velocity:i(6943),registerAll:function(t){this._registered||((t=t||window.AFRAME).components.velocity||t.registerComponent("velocity",this.velocity),this._registered=!0)}}},6943:function(t){t.exports=AFRAME.registerComponent("velocity",{schema:{type:"vec3"},init:function(){this.system=this.el.sceneEl.systems.physics,this.system&&this.system.addComponent(this)},remove:function(){this.system&&this.system.removeComponent(this)},tick:function(t,e){e&&(this.system||this.afterStep(t,e))},afterStep:function(t,e){if(e){var i=this.el.sceneEl.systems.physics||{data:{maxInterval:1/60}},s=this.el.getAttribute("velocity")||{x:0,y:0,z:0},o=this.el.object3D.position||{x:0,y:0,z:0};e=Math.min(e,1e3*i.data.maxInterval),this.el.object3D.position.set(o.x+s.x*e/1e3,o.y+s.y*e/1e3,o.z+s.z*e/1e3)}}})},4538:function(t,e,i){i(5406);const s=i(1389),o=s.SHAPE,n=s.FIT;var a={schema:{type:{default:o.HULL,oneOf:[o.BOX,o.CYLINDER,o.SPHERE,o.CAPSULE,o.CONE,o.HULL,o.HACD,o.VHACD,o.MESH,o.HEIGHTFIELD]},fit:{default:n.ALL,oneOf:[n.ALL,n.MANUAL]},halfExtents:{type:"vec3",default:{x:1,y:1,z:1}},minHalfExtent:{default:0},maxHalfExtent:{default:Number.POSITIVE_INFINITY},sphereRadius:{default:NaN},cylinderAxis:{default:"y",oneOf:["x","y","z"]},margin:{default:.01},offset:{type:"vec3",default:{x:0,y:0,z:0}},orientation:{type:"vec4",default:{x:0,y:0,z:0,w:1}},heightfieldData:{default:[]},heightfieldDistance:{default:1},includeInvisible:{default:!1}},multiple:!0,init:function(){this.system=this.el.sceneEl.systems.physics,this.collisionShapes=[];let t=this.el;for(this.body=t.components["ammo-body"]||null;!this.body&&t.parentNode!=this.el.sceneEl;)t=t.parentNode,t.components["ammo-body"]&&(this.body=t.components["ammo-body"]);if(this.body){if(this.data.fit!==n.MANUAL){if(!this.el.object3DMap.mesh)return void console.error("Cannot use FIT.ALL without object3DMap.mesh");this.mesh=this.el.object3DMap.mesh}this.body.addShapeComponent(this)}else console.warn("body not found")},getMesh:function(){return this.mesh||null},addShapes:function(t){this.collisionShapes=t},getShapes:function(){return this.collisionShapes},remove:function(){if(this.body)for(this.body.removeShapeComponent(this);this.collisionShapes.length>0;){const t=this.collisionShapes.pop();t.destroy(),Ammo.destroy(t.localTransform)}}};t.exports.definition=a,t.exports.Component=AFRAME.registerComponent("ammo-shape",a)},7557:function(t,e,i){var s=i(3687),o={schema:{shape:{default:"box",oneOf:["box","sphere","cylinder"]},offset:{type:"vec3",default:{x:0,y:0,z:0}},orientation:{type:"vec4",default:{x:0,y:0,z:0,w:1}},radius:{type:"number",default:1,if:{shape:["sphere"]}},halfExtents:{type:"vec3",default:{x:.5,y:.5,z:.5},if:{shape:["box"]}},radiusTop:{type:"number",default:1,if:{shape:["cylinder"]}},radiusBottom:{type:"number",default:1,if:{shape:["cylinder"]}},height:{type:"number",default:1,if:{shape:["cylinder"]}},numSegments:{type:"int",default:8,if:{shape:["cylinder"]}}},multiple:!0,init:function(){this.el.sceneEl.hasLoaded?this.initShape():this.el.sceneEl.addEventListener("loaded",this.initShape.bind(this))},initShape:function(){this.bodyEl=this.el;for(var t=this._findType(this.bodyEl),e=this.data;!t&&this.bodyEl.parentNode!=this.el.sceneEl;)this.bodyEl=this.bodyEl.parentNode,t=this._findType(this.bodyEl);if(t){var i,o,n,a=new THREE.Vector3;switch(this.bodyEl.object3D.getWorldScale(a),e.hasOwnProperty("offset")&&(o=new s.Vec3(e.offset.x*a.x,e.offset.y*a.y,e.offset.z*a.z)),e.hasOwnProperty("orientation")&&(n=new s.Quaternion).copy(e.orientation),e.shape){case"sphere":i=new s.Sphere(e.radius*a.x);break;case"box":var r=new s.Vec3(e.halfExtents.x*a.x,e.halfExtents.y*a.y,e.halfExtents.z*a.z);i=new s.Box(r);break;case"cylinder":i=new s.Cylinder(e.radiusTop*a.x,e.radiusBottom*a.x,e.height*a.y,e.numSegments);var d=new s.Quaternion;d.setFromEuler(90*THREE.Math.DEG2RAD,0,0,"XYZ").normalize(),n.mult(d,n);break;default:return void console.warn(e.shape+" shape not supported")}this.bodyEl.body?this.bodyEl.components[t].addShape(i,o,n):this.bodyEl.addEventListener("body-loaded",(function(){this.bodyEl.components[t].addShape(i,o,n)}),{once:!0})}else console.warn("body not found")},_findType:function(t){return t.hasAttribute("body")?"body":t.hasAttribute("dynamic-body")?"dynamic-body":t.hasAttribute("static-body")?"static-body":null},remove:function(){this.bodyEl.parentNode&&console.warn("removing shape component not currently supported")}};t.exports.definition=o,t.exports.Component=AFRAME.registerComponent("shape",o)},6821:function(t,e,i){var s=i(3687);t.exports=AFRAME.registerComponent("spring",{multiple:!0,schema:{target:{type:"selector"},restLength:{default:1,min:0},stiffness:{default:100,min:0},damping:{default:1,min:0},localAnchorA:{type:"vec3",default:{x:0,y:0,z:0}},localAnchorB:{type:"vec3",default:{x:0,y:0,z:0}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.system.addComponent(this),this.isActive=!0,this.spring=null},update:function(t){var e=this.el,i=this.data;i.target?e.body&&i.target.body?(this.createSpring(),this.updateSpring(t)):(e.body?i.target:e).addEventListener("body-loaded",this.update.bind(this,{})):console.warn("Spring: invalid target specified.")},updateSpring:function(t){if(this.spring){var e=this.data,i=this.spring;Object.keys(e).forEach((function(s){if(e[s]!==t[s]){if("target"===s)return void(i.bodyB=e.target.body);i[s]=e[s]}}))}else console.warn("Spring: Component attempted to change spring before its created. No changes made.")},createSpring:function(){this.spring||(this.spring=new s.Spring(this.el.body))},step:function(t,e){return this.spring&&this.isActive?this.spring.applyForce():void 0},play:function(){this.isActive=!0},pause:function(){this.isActive=!1},remove:function(){this.spring&&delete this.spring,this.spring=null}})},1389:function(t){t.exports={GRAVITY:-9.8,MAX_INTERVAL:4/60,ITERATIONS:10,CONTACT_MATERIAL:{friction:.01,restitution:.3,contactEquationStiffness:1e8,contactEquationRelaxation:3,frictionEquationStiffness:1e8,frictionEquationRegularization:3},ACTIVATION_STATE:{ACTIVE_TAG:"active",ISLAND_SLEEPING:"islandSleeping",WANTS_DEACTIVATION:"wantsDeactivation",DISABLE_DEACTIVATION:"disableDeactivation",DISABLE_SIMULATION:"disableSimulation"},COLLISION_FLAG:{STATIC_OBJECT:1,KINEMATIC_OBJECT:2,NO_CONTACT_RESPONSE:4,CUSTOM_MATERIAL_CALLBACK:8,CHARACTER_OBJECT:16,DISABLE_VISUALIZE_OBJECT:32,DISABLE_SPU_COLLISION_PROCESSING:64},TYPE:{STATIC:"static",DYNAMIC:"dynamic",KINEMATIC:"kinematic"},SHAPE:{BOX:"box",CYLINDER:"cylinder",SPHERE:"sphere",CAPSULE:"capsule",CONE:"cone",HULL:"hull",HACD:"hacd",VHACD:"vhacd",MESH:"mesh",HEIGHTFIELD:"heightfield"},FIT:{ALL:"all",MANUAL:"manual"},CONSTRAINT:{LOCK:"lock",FIXED:"fixed",SPRING:"spring",SLIDER:"slider",HINGE:"hinge",CONE_TWIST:"coneTwist",POINT_TO_POINT:"pointToPoint"}}}}]);